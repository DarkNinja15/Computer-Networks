                            Assignment 1: Network Programming using TCP.  (Operating System: Ubuntu)

Q1=> transfer text between client and server/or chat application between client and server using TCP.(show single client and multiple clients also)

******************************************************************************************************************************************

                                      Assignment 2: Network Programming using TCP.

Q=>transfer a file from server to client using TCP protocol.

******************************************************************************************************************************************

                                             Assignment 3: Ns2 installation 

1. sudo apt update
2. sudo apt install build-essential autoconf automake libxmu-dev
3. sudo gedit /etc/apt/sources.list (add the below line in source.list file) deb http://in.archive.ubuntu.com/ubuntu/ bionic main universe (save and close)
(If any GPG error, include the run the below command)
3.1 sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32
4. sudo apt update
5. sudo apt install gcc-4.8 g++-4.8
6. (Make the changes in the following files, wherever @CC@ to be replaced with gcc-4.8 and wherever @CPP@ to be replaced with g++-4.8
6.1 ns-allinone-2.35/ns-2.35/Makefile.in
6.2 ns-allinone-2.35/otcl-1.14/Makefile.in (only @CC@)
6.3 nam-1.15/Makefile.in
6.4 xgraph-12.2/Makefile.in

7. Open the file ns-allinone-2.35/ns-2.35/linkstate/ls.h in line number 137, change the line “erase” to “this->erase” (Save and close)
8. Go back to ns-allinone-2.35 and execute the following command./install

9. Once the installation is over, Set the PATH and LD_LIBRARY_PATH information in the file .bashrc
sudo gedit .bashrc
and add the following
(export PATH=$PATH: (whatever you get on terminal in after installation for path)
export LD_LIBRARY_PATH=(whatever you get on terminal in after installation for ld
library path and remove “,” and add “:”)

(save and close)
Run
source .bashrc
(all done check by typing “ns” should give “%”)

******************************************************************************************************************************************

                                      Assignment 4: Network Programming using UDP.  (Operating System: Ubuntu)

Q=>transfer text between client and server/or chat application between client and server using UDP.(show single client and multiple clients also)

******************************************************************************************************************************************

                                      Assignment 5: Network Programming using UDP.  (Operating System: Ubuntu)

Q=>transfer a file from server to client using UDP protocol.

******************************************************************************************************************************************
                                               
                                                      Assignment 6: Ns2 Programs

Q=>. Write ns2 program for given information and topology in figure.(only first ns2 program is given as per discussion during explanation of the same).

******************************************************************************************************************************************

                                                       Assignment 7:

Q=>7a.  Write a ns2 program for creating a token ring topology considering the following information. Create six nodes that forms a network numbered from 0 to 5. Create duplex links with 1Mb bandwidth and  10ms delay and DropTail queue between the nodes to form a Ring Topology. Setup TCP Connection between node 1 and node 4. Apply CBR Traffic over TCP and schedule events and run the program.

Q=>7b. Write a ns2 program for creating a star topology considering the following information. Create six nodes that forms a network numbered from 0 to 5. Create duplex links with 1Mb bandwidth and  10ms delay and DropTail queue between the nodes to form a Star Topology. Setup TCP Connection  between node 1 and node 5. Apply CBR Traffic over TCP and schedule  events and run the program.

******************************************************************************************************************************************

                                                        Assignment 8:

Q=>Implement the following error detection and correction concepts( separate program for each):
a. CRC
b. Hamming code
c. Parity (1D)

********************************************************************************************************************************

                                                Assignment - wireshark installation

OS: Ubuntu
Installation steps:

sudo apt update

sudo apt install
wireshark
sudo
dpkq-reconfigure wireshark-common (optional, use if you select “No”
for previlized user)

sudo usermod -aG
wireshark <username of your system>

sudo wireshark

sudo apt install
net-tools

******************************************************************************************************************************************

                                                            Assignment-9

Consider the url below
http://gaia.cs.umass.edu/wireshark-labs/INTRO-wireshark-file1.html
Answer the following question
Q=>List 3 different protocols that appear in the protocol column in the unfiltered packet-listing
window. Filter HTTP packets and:

Q=>2. How long did it take from when the HTTP GET message was sent until the HTTP OK replywas received? (By default, the value of the Time column in the packet listing window is the amount of time, in seconds, since Wireshark tracing began. To display the Time field in time-of-day format, select the Wireshark View pull down menu, then select Time Display Format, then select Time-of-day.)

Q=>3. What is the Internet address of the gaia.cs.umass.edu (also known as www net.cs.umass.edu)? What is the Internet address of your computer?

Q=>4. Print the two HTTP messages (GET and OK) referred to in question 2 above. To do so, select Print from the Wireshark File command menu, and select the “Selected Packet Only” and “Print as displayed” radial buttons, and then click OK.

******************************************************************************************************************************************

1. Ubuntu OS: Install traceroute sudo apt-get install traceroute
2. Run Wireshark and start capturing packets
3. While Wireshark is running execute the following commands one by one
traceroute gaia.cs.umass.edu 56
traceroute gaia.cs.umass.edu 2000
traceroute gaia.cs.umass.edu 3500
4. Stop capturing packets

Analyse and answer the following:
1. Select the first ICMP Echo Request message sent by your computer, and expand the Internet
Protocol part of the packet in the packet details window. What is the IP address of your
computer?
2. Within the IP packet header, what is the value in the upper layer protocol field?
3. How many bytes are in the IP header? How many bytes are in the payload of the IP datagram?
Explain how you determined the number of payload bytes.
4. Has this IP datagram been fragmented? Explain how you determined whether or not the
datagram has been fragmented.
5. Which fields in the IP datagram always change from one datagram to the next within this series
of ICMP messages sent by your computer?
6. Which fields stay constant? Which of the fields must stay constant? Which fields must change?
Why?
7. Describe the pattern you see in the values in the Identification field of the IP datagram Next
(with the packets still sorted by source address) find the series of ICMP TTLexceeded replies sent
to your computer by the nearest (first hop) router.
8. What is the value in the Identification field and the TTL field? 9. Do these values remain
unchanged for all of the ICMP TTL-exceeded replies sent to your computer by the nearest (first
hop) router? Why?

					*****Fragmentation*****

10. Find the first ICMP Echo Request message that was sent by your computer after you changed
the Packet Size in traceroute to be 2000. Has that message been fragmented across more than one
IP datagram?
11. Consider the first fragment of the fragmented IP datagram. What information in the IP header
indicates that the datagram been fragmented? What information in the IP header indicates
whether this is the first fragment versus a latter fragment? How long is this IP datagram?
12. Consider the second fragment of the fragmented IP datagram. What information in the IP
header indicates that this is not the first datagram fragment? Are the more fragments? How can
you tell?
13. What fields change in the IP header between the first and second fragment?
Now find the first ICMP Echo Request message that was sent by your computer after you changed
the Packet Size in traceroute to be 3500.
14. How many fragments were created from the original datagram?
15. What fields change in the IP header among the fragments?